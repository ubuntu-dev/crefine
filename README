
>>>>> This is README for C-Refine Version 3.0 <<<<<

C-Refine is a preprocessor for programs written in C or C++ or a similar 
language. It introduces an additional language construct called 'refinement'
which allows further decomposition with symbolic names inside functions.
This makes programs much easier to read and modify and is very comfortable
for programming.

We also call these extended languages C-Refine (or C++-Refine, and so on).
The C-Refine preprocessor converts program written in C-Refine into plain C, 
and programs written in C++-Refine into normal C++, and programs 
written in Objective-C-Refine into normal Objective-C, and so on.
The preprocessor is much faster than a C compiler, so it will not
unbearably slow down the overall compilation process.

The installed system consists of a single executable file (crefine) and one
Unix Manualpage (crefine.1). An additional driver shell script (ccr) plus
Manualpage are also provided.
No further data files or libraries except the standard C library are needed.

------------------------------------------------------------------------------

Portability:
------------
C-Refine is completely portable to all machines that have a standard 
C library. 
It should readily compile at least on all ANSI-C machines, all
standard BSD-Unix machines and standard System V machines.

If #include <strings.h> fails, change it to #include <string.h>
If #include <string.h>  fails, change it to #include <strings.h>

------------------------------------------------------------------------------

Compilation:
------------

Usually, no changes in the Makefile are required.

To generate C-Refine (which is bootstrapped, i.e. written in C-Refine)
you must first compile the preprocessed version of the files.

This is done with the command
  make crefine
which should compile from the *.c files.
If this doesn't work, please issue a 
  touch *.c
and try again.
The *.c files have to be newer than the *.cr files or else make will try
to call crefine to transform *.cr files into *.c files, which of course
is not possible for you in the beginning, if you don't already have crefine.

If you have a working version of C-Refine you can bootstrap it via
  make completely_clean crefine

What you see then is no error: C-Refine works extremely fast; you will
hardly notice the time it takes for running crefine before the compiler is
started on each source file.

The Makefile is a bit simple-minded.

------------------------------------------------------------------------------

Environments where C-Refine already once worked:

Machine            Operating System (and perhaps Compiler)
-------            ---------------------------------------
Apollo DN3xxx      DOMAIN/OS SR10.3 BSD (ANSI C 6.8)
Apollo series 400  DOMAIN/OS SR10.3 BSD (ANSI C 6.8)
Atari ST           OS-9/68000 V2.3
AT/386             ISC Unix 3.2.2 (GNU C 1.39)
AT/386             SCO Unix 3.2.2 (cc or GNU C 1.40 without optimization)
AT&T 3B2           System V
Commodore Amiga    AmigaOS 1.3 (DICE 2.06.33)
Convex C2          Convex OS
DECstation 3100    Ultrix 4.1
DG Aviion 4620     System V r4.1
Next 68040         NextStep 2.0
Opus System PM-417 System V r3.2
PC etc.            MS-DOS 3.2 (Microsoft C 5.0)
PC etc.            OS/2 Vers. 1.3 (Microsoft C 6.0)
PCS (type???)      some System V
Sequent Symmetry   DYNIX 3.1.4
Sun3               SUN-OS 3.5
Sun3,Sun4          SUN-OS 4.03
Sun3,Sun4          SUN-OS 4.1
VAXstation 3250    Ultrix-32 V3.1

------------------------------------------------------------------------------

C-Refine was designed and implemented by 
  Lutz Prechelt, Universitaet Karlsruhe, Germany
  prechelt@ira.uka.de

C-Refine is distributed under the GNU general public licence ("Copyleft").
See the file COPYING for details.
